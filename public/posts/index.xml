<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 0xsuk&#39;s blog</title>
    <link>https://0xsuk.github.io/posts/</link>
    <description>Recent content in Posts on 0xsuk&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright Â© {year} 0xsuk. All Rights Reserved.</copyright>
    <lastBuildDate>Fri, 25 Mar 2022 02:41:36 +0000</lastBuildDate><atom:link href="https://0xsuk.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Build your own markdown editor with React.js and Codemirror 6</title>
      <link>https://0xsuk.github.io/posts/2022-03-25-build-your-own-markdown-editor-with-react.js-and-codemirror-6/</link>
      <pubDate>Fri, 25 Mar 2022 02:41:36 +0000</pubDate>
      
      <guid>https://0xsuk.github.io/posts/2022-03-25-build-your-own-markdown-editor-with-react.js-and-codemirror-6/</guid>
      <description>Hi suk here. This post explains how to create markdown editor/previewer with React.js / Codemirror 6. I&amp;rsquo;m writing this down because I had to learn how to build markdown editor for my project (Headless CMS with hackable markdown editor). Hope this post helps someone like me.
Goal of this project We are going to create a simple markdown editor that works in your browser. If I write strings in markdown format in codemirror editor, React.</description>
    </item>
    
    <item>
      <title>Creating a Blog with Hugo</title>
      <link>https://0xsuk.github.io/posts/2022-02-11-creating-a-blog-with-hugo/</link>
      <pubDate>Fri, 11 Feb 2022 04:22:29 +0000</pubDate>
      
      <guid>https://0xsuk.github.io/posts/2022-02-11-creating-a-blog-with-hugo/</guid>
      <description>Hugo - Static Site Generator Hugo is a popular opensource static site generator that runs on your computer.
We are going to cover how to install hugo on your computer and run it to build a fast static website or a blog.
What is a static site? A static site prebuilds HTML/CSS/JavaScript code that will work as webpages, and serve them when users visit a website. In contrast, traditional dynamic website renders a webpage every time users visit a website.</description>
    </item>
    
  </channel>
</rss>
